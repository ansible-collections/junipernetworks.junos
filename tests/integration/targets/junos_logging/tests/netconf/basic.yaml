---
- ansible.builtin.debug:
    msg="START junos_logging netconf/basic.yaml on connection={{ ansible_connection
    }}"

- name: setup - remove file logging
  junipernetworks.junos.junos_logging:
    dest: file
    name: test
    facility: pfe
    level: error
    state: absent

- name: Create file logging
  register: result
  junipernetworks.junos.junos_logging:
    dest: file
    name: test_file
    facility: pfe
    level: error
    state: present

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_file</name>' in config.xml"
      - "'<name>pfe</name>' in config.xml"
      - "'<error/>' in config.xml"

- name: Create file logging (idempotent)
  register: result
  junipernetworks.junos.junos_logging:
    dest: file
    name: test_file
    facility: pfe
    level: error
    state: present

- ansible.builtin.assert:
    that:
      - result.changed == false

- name: Deactivate logging configuration
  register: result
  junipernetworks.junos.junos_logging:
    dest: file
    name: test_file
    facility: pfe
    level: error
    state: present
    active: false

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - '''<file inactive="inactive">'' in config.xml'
      - '''<contents inactive="inactive">'' in config.xml'

- name: Activate logging configuration
  register: result
  junipernetworks.junos.junos_logging:
    dest: file
    name: test_file
    facility: pfe
    level: error
    state: present
    active: true

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_file</name>' in config.xml"
      - "'<name>pfe</name>' in config.xml"
      - "'<error/>' in config.xml"

- name: Delete logging configuration
  register: result
  junipernetworks.junos.junos_logging:
    dest: file
    name: test_file
    facility: pfe
    level: error
    state: absent

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_file</name>' not in config.xml"

- name: Configure console logging
  register: result
  junipernetworks.junos.junos_logging:
    dest: console
    facility: kernel
    level: emergency
    state: present
    active: true

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<console>' in config.xml"
      - "'<name>kernel</name>' in config.xml"
      - "'<emergency/>' in config.xml"

- name: Configure console logging (idempotent)
  register: result
  junipernetworks.junos.junos_logging:
    dest: console
    facility: kernel
    level: emergency
    state: present
    active: true

- ansible.builtin.assert:
    that:
      - result.changed == false

- name: Disable console logging
  register: result
  junipernetworks.junos.junos_logging:
    dest: console
    facility: kernel
    level: emergency
    state: present
    active: false

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - '''<console inactive="inactive">'' in config.xml'

- name: Delete console logging
  register: result
  junipernetworks.junos.junos_logging:
    dest: console
    facility: kernel
    level: emergency
    state: absent

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<console>' not in config.xml"

- name: Configure logging parameters
  register: result
  junipernetworks.junos.junos_logging:
    size: 65536
    files: 40
    rotate_frequency: 20
    state: present

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<size>64k</size>' in config.xml"
      - "'<files>40</files>' in config.xml"
      - "'<log-rotate-frequency>20</log-rotate-frequency>' in config.xml"

- name: Configure logging parameters (idempotent)
  register: result
  junipernetworks.junos.junos_logging:
    size: 65536
    files: 40
    rotate_frequency: 20
    state: present
    active: true

- ansible.builtin.assert:
    that:
      - result.changed == false

- name: Disable logging parameters
  register: result
  junipernetworks.junos.junos_logging:
    size: 65536
    files: 40
    rotate_frequency: 20
    state: present
    active: false

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - '''<size inactive="inactive">64k</size>'' in config.xml'
      - '''<files inactive="inactive">40</files>'' in config.xml'
      - "'<log-rotate-frequency inactive=\"inactive\">20</log-rotate-frequency>'\
        \ in config.xml"

- name: Activate logging parameters
  register: result
  junipernetworks.junos.junos_logging:
    size: 65536
    files: 40
    rotate_frequency: 20
    state: present
    active: true

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<size>64k</size>' in config.xml"
      - "'<files>40</files>' in config.xml"
      - "'<log-rotate-frequency>20</log-rotate-frequency>' in config.xml"

- name: Delete logging parameters
  register: result
  junipernetworks.junos.junos_logging:
    size: 65536
    files: 40
    rotate_frequency: 20
    state: absent

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<size>64k</size>' not in config.xml"
      - "'<files>40</files>' not in config.xml"
      - "'<log-rotate-frequency>20</log-rotate-frequency>' not in config.xml"

- name: Seup file logging using aggregate
  register: result
  junipernetworks.junos.junos_logging:
    aggregate:
      - dest: file
        name: test-1
        facility: pfe
        level: critical
        state: absent

      - dest: file
        name: test-2
        facility: kernel
        level: emergency
        state: absent

- name: Configure file logging using aggregate
  register: result
  junipernetworks.junos.junos_logging:
    aggregate:
      - dest: file
        name: test-1
        facility: pfe
        level: critical
        active: true

      - dest: file
        name: test-2
        facility: kernel
        level: emergency
        active: true

- ansible.builtin.assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\+ *file test-1")
      - result.diff.prepared is search("\+ *pfe critical")
      - result.diff.prepared is search("\+ *file test-2")
      - result.diff.prepared is search("\+ *kernel emergency")

- name: Deactivate file logging configuration using aggregate
  register: result
  junipernetworks.junos.junos_logging:
    aggregate:
      - dest: file
        name: test-1
        facility: pfe
        level: critical

      - dest: file
        name: test-2
        facility: kernel
        level: emergency
    active: false

- ansible.builtin.assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("! *inactive[:] file test-1")
      - result.diff.prepared is search("! *inactive[:] pfe")
      - result.diff.prepared is search("! *inactive[:] file test-2")
      - result.diff.prepared is search("! *inactive[:] kernel")

- name: activate file logging configuration using aggregate
  register: result
  junipernetworks.junos.junos_logging:
    aggregate:
      - dest: file
        name: test-1
        facility: pfe
        level: critical

      - dest: file
        name: test-2
        facility: kernel
        level: emergency
    active: true

- ansible.builtin.assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("! *active[:] file test-1")
      - result.diff.prepared is search("! *active[:] pfe")
      - result.diff.prepared is search("! *active[:] file test-2")
      - result.diff.prepared is search("! *active[:] kernel")

- name: Delete file logging using aggregate
  register: result
  junipernetworks.junos.junos_logging:
    aggregate:
      - dest: file
        name: test-1
        facility: pfe
        level: critical

      - dest: file
        name: test-2
        facility: kernel
        level: emergency
    state: absent

- ansible.builtin.assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\- *file test-1")
      - result.diff.prepared is search("\- *pfe critical")
      - result.diff.prepared is search("\- *file test-2")
      - result.diff.prepared is search("\- *kernel emergency")

- name: Delete file logging using aggregate (idempotent)
  register: result
  junipernetworks.junos.junos_logging:
    aggregate:
      - dest: file
        name: test-1
        facility: pfe
        level: critical

      - dest: file
        name: test-2
        facility: kernel
        level: emergency
    state: absent

- ansible.builtin.assert:
    that:
      - result.changed == false

- ansible.builtin.debug:
    msg="END junos_logging netconf/basic.yaml on connection={{ ansible_connection
    }}"
